This is a mirror of http://www.vim.org/scripts/script.php?script_id=2033

This plugin uses ad-hoc searches to find strings in files. For certain 
languages, it can also find variable/function/class definitions, 
function calls etc.

Other than |tags| or |cscope|, it doesn't build a database to speed up 
searches but always scans all files. It can make use of external tools 
like `git grep`, `ack`, or `ag` though, in order to gain acceptable 
performance for medium-sized projects. The builtin vimscript-based 
version file scanner and also |vimgrep| are suitable for small projects. 
See |g:trag#grep_type| for available options.


Usage~

First, define which files belong to your project. See 
|g:trag#file_sources| for available sources. If the variable contains 
"vcs" and the current buffer is under control of a supported VCS, trag 
will scan the files in the VCS. Maybe your project's source files are 
already registered in your tags files, in which case those will be used.

Secondly, use |:Trag| or |:Traggrep| to scan your project's files. You 
can restrict searches to certain "kinds" like only variable definitions 
or only function calls. See |trag-kinds| for details.

You can also type <Leader>r# to search for the word under cursor (see 
|g:trag_map_leader| and |TragInstallMap()| for details on maps). In 
supported filetypes, <Leader>rd will search for the definition of the 
word under cursor.

Currently the following filetypes are supported:

    - java
    - javascript
    - json
    - make
    - r
    - ruby
    - viki
    - vim


:Trag[!] MODE REGEXP
    Run |:Tragsearch| and instantly display the result with |:Tragcw|.
    See |trag#Grep()| for help on the arguments.
    Examples:
      " Find any matches
      Trag . foo

      " Find variable definitions (word on the left-hand): foo = 1
      Trag l foo
    
      " Find variable __or__ function/method definitions
      Trag d,l foo
    
      " Find function calls like: foo(a, b)
      Trag f foo

